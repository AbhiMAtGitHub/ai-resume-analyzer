name: Build and Push to ECR

on:
  workflow_dispatch:

  push:
    branches:
      - "**"
    paths:
      - "docker/**"
      - "resume_analyzer/**"
      - "pyproject.toml"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build & Push Lambda Container to ECR
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      PROJECT_SLUG: resume-analyzer
      IMAGE_NAME: file-handler

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install uv (Python environment manager)
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache uv environment
        uses: actions/cache@v4
        with:
          path: .venv
          key: uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: uv-

      - name: Build Docker image for Lambda
        working-directory: docker
        run: |
          IMAGE_TAG=build-${{ github.sha }}
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.PROJECT_SLUG }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

          echo "Building Docker image..."
          docker build -t $IMAGE_URI -f Dockerfile ..

      - name: Push image to Amazon ECR
        run: |
          echo "Pushing $IMAGE_URI"
          docker push $IMAGE_URI

      - name: Show pushed image details
        run: |
          echo "Image pushed successfully!"
          echo "Repository: ${{ steps.login-ecr.outputs.registry }}/${{ env.PROJECT_SLUG }}/${{ env.IMAGE_NAME }}"
          echo "Tag: $IMAGE_TAG"
          echo "Full URI: $IMAGE_URI"
